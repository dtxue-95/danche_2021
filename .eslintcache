[{"F:\\danche_2021_3\\src\\pages\\route_demo\\route1\\Home.js":"1","F:\\danche_2021_3\\src\\index.js":"2","F:\\danche_2021_3\\src\\pages\\route_demo\\route2\\Home.js":"3","F:\\danche_2021_3\\src\\pages\\route_demo\\route2\\router.js":"4","F:\\danche_2021_3\\src\\pages\\route_demo\\route1\\Main.js":"5","F:\\danche_2021_3\\src\\pages\\route_demo\\route2\\Main.js":"6","F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\Main.js":"7","F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\router.js":"8","F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\info.js":"9","F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\Info.js":"10","F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\Home.js":"11","F:\\danche_2021_3\\src\\router.js":"12","F:\\danche_2021_3\\src\\reportWebVitals.js":"13","F:\\danche_2021_3\\src\\App.js":"14","F:\\danche_2021_3\\src\\pages\\home\\index.js":"15","F:\\danche_2021_3\\src\\config\\menuConfig.js":"16","F:\\danche_2021_3\\src\\admin.js":"17","F:\\danche_2021_3\\src\\components\\NavLeft\\index.js":"18","F:\\danche_2021_3\\src\\pages\\login\\index.js":"19","F:\\danche_2021_3\\src\\components\\Footer\\index.js":"20","F:\\danche_2021_3\\src\\axios\\index.js":"21","F:\\danche_2021_3\\src\\components\\Header\\index.js":"22","F:\\danche_2021_3\\src\\pages\\ui\\button.js":"23","F:\\danche_2021_3\\src\\pages\\nomatch\\index.js":"24","F:\\danche_2021_3\\src\\pages\\ui\\modals.js":"25","F:\\danche_2021_3\\src\\pages\\ui\\loadings.js":"26","F:\\danche_2021_3\\src\\pages\\ui\\notice.js":"27","F:\\danche_2021_3\\src\\pages\\ui\\messages.js":"28","F:\\danche_2021_3\\src\\pages\\ui\\tabs.js":"29","F:\\danche_2021_3\\src\\pages\\ui\\gallery.js":"30","F:\\danche_2021_3\\src\\pages\\ui\\carousel.js":"31","F:\\danche_2021_3\\src\\pages\\form\\login.js":"32","F:\\danche_2021_3\\src\\pages\\form\\register.js":"33","F:\\danche_2021_3\\src\\pages\\table\\basicTable.js":"34","F:\\danche_2021_3\\src\\pages\\city\\index.js":"35","F:\\danche_2021_3\\src\\utils\\utils.js":"36","F:\\danche_2021_3\\src\\pages\\table\\highTable.js":"37","F:\\danche_2021_3\\src\\pages\\order\\index.js":"38"},{"size":1264,"mtime":1612600624735,"results":"39","hashOfConfig":"40"},{"size":796,"mtime":1613272525133,"results":"41","hashOfConfig":"40"},{"size":672,"mtime":1612686416116,"results":"42","hashOfConfig":"40"},{"size":1043,"mtime":1612686368808,"results":"43","hashOfConfig":"40"},{"size":454,"mtime":1612686378351,"results":"44","hashOfConfig":"40"},{"size":454,"mtime":1612687784913,"results":"45","hashOfConfig":"40"},{"size":644,"mtime":1612692943446,"results":"46","hashOfConfig":"40"},{"size":1163,"mtime":1612699361996,"results":"47","hashOfConfig":"40"},{"size":325,"mtime":1612693313684,"results":"48","hashOfConfig":"40"},{"size":338,"mtime":1612694032097,"results":"49","hashOfConfig":"40"},{"size":916,"mtime":1612694103260,"results":"50","hashOfConfig":"40"},{"size":2755,"mtime":1613437365195,"results":"51","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"40"},{"size":235,"mtime":1612701687667,"results":"53","hashOfConfig":"40"},{"size":298,"mtime":1612532437414,"results":"54","hashOfConfig":"40"},{"size":2851,"mtime":1612788391378,"results":"55","hashOfConfig":"40"},{"size":925,"mtime":1612786112823,"results":"56","hashOfConfig":"40"},{"size":1663,"mtime":1612786324432,"results":"57","hashOfConfig":"40"},{"size":236,"mtime":1612702094338,"results":"58","hashOfConfig":"40"},{"size":409,"mtime":1612530915973,"results":"59","hashOfConfig":"40"},{"size":2017,"mtime":1613357250776,"results":"60","hashOfConfig":"40"},{"size":2319,"mtime":1613107639952,"results":"61","hashOfConfig":"40"},{"size":4175,"mtime":1612845098461,"results":"62","hashOfConfig":"40"},{"size":285,"mtime":1612787502773,"results":"63","hashOfConfig":"40"},{"size":3857,"mtime":1612844795379,"results":"64","hashOfConfig":"40"},{"size":2653,"mtime":1612859420027,"results":"65","hashOfConfig":"40"},{"size":1915,"mtime":1612880709394,"results":"66","hashOfConfig":"40"},{"size":956,"mtime":1612881375729,"results":"67","hashOfConfig":"40"},{"size":4098,"mtime":1612922154375,"results":"68","hashOfConfig":"40"},{"size":2370,"mtime":1612939420597,"results":"69","hashOfConfig":"40"},{"size":1309,"mtime":1612940482896,"results":"70","hashOfConfig":"40"},{"size":3997,"mtime":1612964920043,"results":"71","hashOfConfig":"40"},{"size":9526,"mtime":1612970827015,"results":"72","hashOfConfig":"40"},{"size":9570,"mtime":1613381547929,"results":"73","hashOfConfig":"40"},{"size":9651,"mtime":1613404572557,"results":"74","hashOfConfig":"40"},{"size":716,"mtime":1613380804967,"results":"75","hashOfConfig":"40"},{"size":15504,"mtime":1613396763006,"results":"76","hashOfConfig":"40"},{"size":9467,"mtime":1613484657586,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13r8lwr",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"111"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"111"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"105"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\danche_2021_3\\src\\pages\\route_demo\\route1\\Home.js",[],"F:\\danche_2021_3\\src\\index.js",[],["169","170"],"F:\\danche_2021_3\\src\\pages\\route_demo\\route2\\Home.js",[],"F:\\danche_2021_3\\src\\pages\\route_demo\\route2\\router.js",[],"F:\\danche_2021_3\\src\\pages\\route_demo\\route1\\Main.js",[],"F:\\danche_2021_3\\src\\pages\\route_demo\\route2\\Main.js",[],"F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\Main.js",[],"F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\router.js",[],"F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\info.js",[],"F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\Info.js",[],"F:\\danche_2021_3\\src\\pages\\route_demo\\route3\\Home.js",[],"F:\\danche_2021_3\\src\\router.js",[],"F:\\danche_2021_3\\src\\reportWebVitals.js",[],["171","172"],"F:\\danche_2021_3\\src\\App.js",["173"],"import React, { Component } from 'react';\nimport {Button} from 'antd'\nimport './App.css'\nclass App extends Component {\n  render() { \n    return (\n      <div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n \nexport default App;","F:\\danche_2021_3\\src\\pages\\home\\index.js",[],["174","175"],"F:\\danche_2021_3\\src\\config\\menuConfig.js",[],"F:\\danche_2021_3\\src\\admin.js",["176"],"import { Col, Row } from 'antd';\r\nimport Header from './components/Header/index'\r\nimport Footer from './components/Footer/index'\r\nimport React, { Component } from 'react';\r\nimport NavLeft from './components/NavLeft';\r\nimport './components/style/common.less'\r\nimport Home from './pages/home';\r\n \r\nclass Admin extends Component {\r\n    render() { \r\n        return (\r\n            <Row className=\"container\">\r\n                    <Col span=\"3\" className=\"nav-left\">\r\n                        <NavLeft/>\r\n                    </Col>\r\n                    <Col span=\"21\" className=\"main\">\r\n                        <Header/>\r\n                        <Row className=\"content\">\r\n                            {/* <Home/>   */}\r\n                            {this.props.children}\r\n                        </Row>\r\n                        <Footer/>\r\n                    </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Admin;",["177","178"],"F:\\danche_2021_3\\src\\components\\NavLeft\\index.js",["179"],"import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd'; \r\nimport { NavLink } from 'react-router-dom'\r\nimport MenuConfig from './../../config/menuConfig'\r\nimport './index.less'\r\nconst  SubMenu  = Menu.SubMenu;\r\nclass NavLeft extends Component {\r\n    // render() { \r\n    //     var style = {\r\n    //         backgroundColor: 'red'\r\n    //     }\r\n    //     return (\r\n    //         <div style={style}>\r\n    //             NavLeft\r\n    //         </div>\r\n    //     );\r\n    // }\r\n    componentWillMount(){\r\n       const menuTreeNode =  this.renderMenu(MenuConfig)\r\n\r\n       this.setState({\r\n           menuTreeNode\r\n       })\r\n    }\r\n    //菜单渲染\r\n    renderMenu = (data) =>{\r\n        return data.map((item)=>{\r\n            if(item.children){\r\n                return (\r\n                    <SubMenu title={item.title} key={item.key}>\r\n                        {this.renderMenu(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }\r\n            return <Menu.Item title={item.title} key={item.key}>\r\n                {/* {item.title} */}\r\n                <NavLink to={item.key}>{item.title}</NavLink>\r\n            </Menu.Item>\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div style={{backgroundColor:'#ffffff'}}>\r\n                <div className=\"logo\">\r\n                    <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\r\n                    <h1>Imooc MS</h1>\r\n                </div>\r\n                <Menu\r\n                    theme=\"dark\"\r\n                >\r\n                  {this.state.menuTreeNode} \r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default NavLeft;","F:\\danche_2021_3\\src\\pages\\login\\index.js",[],"F:\\danche_2021_3\\src\\components\\Footer\\index.js",[],"F:\\danche_2021_3\\src\\axios\\index.js",[],"F:\\danche_2021_3\\src\\components\\Header\\index.js",["180","181"],"import React, { Component } from 'react';\r\nimport {Row,Col} from 'antd'\r\nimport './index.less'\r\nimport Util from '../../utils/utils'\r\nimport axios from '../../axios'\r\nclass Header extends Component {\r\n    componentWillMount(){\r\n        this.setState({\r\n            userName:\"这是一台机器\"\r\n        })\r\n        setInterval(()=>{\r\n            let sysTime = Util.formateDate(new Date().getTime());\r\n            this.setState({\r\n                sysTime\r\n            })\r\n        },1000)\r\n        this.getWeatherAPIData();\r\n    }\r\n    getWeatherAPIData(){\r\n        // let city = '北京';\r\n        // axios.jsonp({\r\n        //     url:'https://devapi.qweather.com/v7/weather/now?location=101010100&key=528b2fabd6404fcfa376800599fe44b7'\r\n        //       url:'https://devapi.qweather.com/v7/weather/now?location='+city+'&key=528b2fabd6404fcfa376800599fe44b7'\r\n        // })\r\n        // .then((res)=>{\r\n        //     if(res.status == 'success'){\r\n        //         let data = res.results[0].weather_data[0];\r\n        //         this.setState({\r\n        //             dayPictureUrl:data.dayPictureUrl\r\n        //             weather:data.weather\r\n        //         })\r\n        //     }\r\n        // })\r\n       \r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"header\">\r\n               <Row className=\"header-top\">\r\n                   <Col span=\"24\">\r\n                        <span>欢迎,{this.state.userName}</span>\r\n                        <a href=\"#\">退出</a>\r\n                   </Col>\r\n               </Row>\r\n               <Row className=\"breadcrumb\">\r\n                   <Col span=\"4\" className=\"breadcrumb-title\">\r\n                        首页\r\n                   </Col>\r\n                   <Col span=\"20\" className=\"weather\">\r\n                        <span className=\"date\">{this.state.sysTime}</span>\r\n                        {/* <span className=\"weather-img\">\r\n                            <img src={this.state.dayPictureUlr} alt=\"\"/> \r\n                        </span> */}\r\n                        <span className=\"weather-detail\">\r\n                            多云转晴\r\n                            {/* {this.state.weather} */}\r\n                        </span>\r\n                   </Col>\r\n               </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","F:\\danche_2021_3\\src\\pages\\ui\\button.js",[],"F:\\danche_2021_3\\src\\pages\\nomatch\\index.js",[],"F:\\danche_2021_3\\src\\pages\\ui\\modals.js",[],"F:\\danche_2021_3\\src\\pages\\ui\\loadings.js",[],"F:\\danche_2021_3\\src\\pages\\ui\\notice.js",[],"F:\\danche_2021_3\\src\\pages\\ui\\messages.js",[],"F:\\danche_2021_3\\src\\pages\\ui\\tabs.js",[],"F:\\danche_2021_3\\src\\pages\\ui\\gallery.js",["182"],"import { Card, Col, Modal, Row } from 'antd';\r\nimport React, { Component } from 'react';\r\n \r\nclass Gallery extends Component {\r\n    \r\n    state = {\r\n        visible:false\r\n    }\r\n    openGallery = (imgSrc) => {\r\n        this.setState({\r\n            visible:true,\r\n            currentImg:'/gallery/' + imgSrc\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const imgs = [\r\n            ['1.png', '2.png', '3.png', '4.png', '5.png'],\r\n            ['6.png', '7.png', '8.png', '9.png', '10.png'],\r\n            ['11.png', '12.png', '13.png', '14.png', '15.png'],\r\n            ['16.png', '17.png', '18.png', '19.png', '20.png'],\r\n            ['21.png', '22.png', '23.png', '24.png', '25.png'] \r\n        ]\r\n        const imgList = imgs.map((list) => list.map((item) =>\r\n            <Card\r\n            style={{marginBottom:10}}\r\n                // cover设置封面\r\n                cover = {<img src={'/gallery/'+item} onClick={()=>this.openGallery(item)}/>}\r\n            >\r\n                <Card.Meta \r\n                title=\"React Admin\"\r\n                description=\"I Love Imooc\"\r\n                />\r\n            </Card>\r\n        ))\r\n        return (\r\n            <div className=\"card-wrap\">\r\n                <Row gutter={10}>\r\n                    <Col md={4}>\r\n                        {imgList[0]}\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        {imgList[1]}\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        {imgList[2]}\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        {imgList[3]}\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        {imgList[4]}\r\n                    </Col>\r\n                </Row>\r\n                <Modal\r\n                    width={500}\r\n                    height={500}\r\n                    visible={this.state.visible}\r\n                    title=\"这是一台机器的画廊\"\r\n                    onCancel = {()=>{\r\n                        this.setState({\r\n                            visible:false\r\n                        })\r\n                    }}\r\n                    footer={null}\r\n                >\r\n                    {<img src={this.state.currentImg} alt=\"\" style={{height:'100%',width:'100%'}}/>}\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Gallery;","F:\\danche_2021_3\\src\\pages\\ui\\carousel.js",[],["183","184"],"F:\\danche_2021_3\\src\\pages\\form\\login.js",["185"],"import { Button, Card, Checkbox, Form, Icon, Input, message } from 'antd';\r\nimport React, { Component } from 'react';\r\nconst FormItem = Form.Item;\r\nclass FormLogin extends Component {\r\n\r\n    handleSubmit = () => {\r\n        let userInfo = this.props.form.getFieldsValue();\r\n        this.props.form.validateFields((err,values)=>{\r\n            if(!err){\r\n                message.success(`恭喜${userInfo.userName}，您通过本次表单组件学习，当前密码为:${userInfo.userPwd}`)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const { getFieldDecorator} = this.props.form;\r\n        return (\r\n            <div>\r\n                <Card title=\"登录行内表单\">\r\n                    <Form layout=\"inline\">\r\n                        <FormItem>\r\n                            <Input placeholder=\"请输入用户名\"/>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Input placeholder=\"请输入密码\"/>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\">登录</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n                <Card title=\"登录水平表单\" style={{marginTop:10}}>\r\n                    <Form layout=\"horizontal\" style={{width:300}}>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('userName',{\r\n                                    initialValue:'',\r\n                                    rules:[\r\n                                        {\r\n                                            required:true,\r\n                                            message:'用户名不能为空'\r\n                                        },\r\n                                        {\r\n                                            min:5,max:10,\r\n                                            message:'长度不在范围内'\r\n                                        },\r\n                                        {\r\n                                            pattern:new RegExp('^\\\\w+$','g'),\r\n                                            message:'用户名必须为字母或者数字'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"user\"/>} placeholder=\"请输入用户名\"/>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('userPwd',{\r\n                                    initialValue:'',\r\n                                    rules:[\r\n                                       \r\n                                    ]\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"lock\"/>} type=\"password\" placeholder=\"请输入密码\"/>\r\n                                )\r\n                            }   \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('remember',{\r\n                                    valuePropName:'checked',\r\n                                    initialValue: true\r\n                                })(\r\n                                    <Checkbox>记住密码</Checkbox>\r\n                                )\r\n                            }\r\n                            <a href = \"#\" style={{float:'right'}}>忘记密码</a>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Form.create()(FormLogin);","F:\\danche_2021_3\\src\\pages\\form\\register.js",["186","187"],"import { Button, Card, Checkbox, DatePicker, Form, Input, InputNumber, Radio, Select, Switch, TimePicker, Upload, message, Icon } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport moment from 'moment';\r\nconst FormItem = Form.Item; \r\nconst RadioGroup = Radio.Group;\r\nconst Option = Select.Option;\r\nconst TextArea = Input.TextArea;\r\nclass FormRegister extends Component {\r\n\r\n    state = {}\r\n\r\n    handleSubmit = () => {\r\n        let userInfo = this.props.form.getFieldsValue();\r\n        console.log(JSON.stringify(userInfo));\r\n        message.success(`恭喜${userInfo.userName},您通过本次表单组件学习，当前密码为：${userInfo.userPwd}`)\r\n    }\r\n\r\n    getBase64 = (img,callback) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load',() => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    handleChange = (info) => {\r\n        if(info.file.status === 'uploading') {\r\n            this.setState({loading:true});\r\n            return;\r\n        }\r\n        if(info.file.status === 'done') {\r\n            this.getBase64(info.file.originFileObj,imageUrl => this.setState({\r\n                userImg:imageUrl,\r\n                loading: false,\r\n            }))\r\n        }\r\n    }\r\n    render() { \r\n        const { getFieldDecorator } = this.props.form;\r\n        const rowObject = {\r\n            minRows: 4, maxRows: 6\r\n        }\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                xs:24,\r\n                sm:4\r\n            },\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:12\r\n            }\r\n        }\r\n        const offsetLayout = {\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:{\r\n                    span:12,\r\n                    offset:4\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title=\"注册表单\">\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem label=\"用户名\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userName', {\r\n                                    initialValue: '',\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '用户名不能为空'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <Input placeholder=\"请输入用户名\" />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"密码\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userPwd', {\r\n                                    initialValue:''\r\n                                })(\r\n                                    <Input type=\"password\" placeholder=\"请输入密码\"/>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"性别\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('sex', {\r\n                                    initialValue: '1'\r\n                                })(\r\n                                    <RadioGroup>\r\n                                        <Radio value=\"1\">男</Radio>\r\n                                        <Radio value=\"2\">女</Radio>\r\n                                    </RadioGroup>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"年龄\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('age', {\r\n                                    initialValue: 18\r\n                                })(\r\n                                    <InputNumber/>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"当前状态\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('state', {\r\n                                    initialValue: '2'\r\n                                })(\r\n                                    <Select>\r\n                                        <Option value=\"1\">咸鱼一条</Option>\r\n                                        <Option value=\"2\">风华浪子</Option>\r\n                                        <Option value=\"3\">北大才子一枚</Option>\r\n                                        <Option value=\"4\">百度FE</Option>\r\n                                        <Option value=\"5\">创业者</Option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"爱好\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('interest', {\r\n                                    initialValue:['2','5']\r\n                                })(\r\n                                    <Select mode=\"multiple\">\r\n                                        <Option value=\"1\">游泳</Option>\r\n                                        <Option value=\"2\">打篮球</Option>\r\n                                        <Option value=\"3\">踢足球</Option>\r\n                                        <Option value=\"4\">跑步</Option>\r\n                                        <Option value=\"5\">爬山</Option>\r\n                                        <Option value=\"6\">骑行</Option>\r\n                                        <Option value=\"7\">桌球</Option>\r\n                                        <Option value=\"8\">麦霸</Option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"是否已婚\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('isMarried', {\r\n                                    valuePropName:'checked',\r\n                                    initialValue: true\r\n                                })(\r\n                                    <Switch/>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"生日\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('birthday', {\r\n                                    initialValue: moment('2021-02-01')\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"联系地址\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('address', {\r\n                                    initialValue:'山西省大同市云冈区'\r\n                                })(\r\n                                    <TextArea\r\n                                        autosize={rowObject}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"早起时间\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('time')(\r\n                                    <TimePicker/>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"头像\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg')(\r\n                                    <Upload\r\n                                        listType=\"picture-card\"\r\n                                        showUploadList={false}\r\n                                        action=\"//jsonplaceholder.typicode.com/posts/\"\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                    {this.state.userImg?<img src={this.state.userImg}/>:<Icon type=\"plus\"/>}\r\n                                    </Upload>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem {...offsetLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg')(\r\n                                    <Checkbox>我已阅读过<a href=\"#\">慕课协议</a></Checkbox>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem {...offsetLayout}>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Form.create()(FormRegister);","F:\\danche_2021_3\\src\\pages\\table\\basicTable.js",["188","189","190"],"import { Button, Card, message, Modal, Table } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport Utils from '../../utils/utils';\r\nimport axios from './../../axios/index'\r\n// import axios from 'axios'\r\nclass BasicTable extends Component {\r\n    state={\r\n        dataSource2:[]\r\n    }\r\n\r\n    params = {\r\n        page:1\r\n    }\r\n    componentDidMount(){\r\n        const data = [\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2021-01-01',\r\n                address:'山西省大同市云冈区',\r\n                time:'09:00'\r\n            },\r\n            {\r\n                id: '1',\r\n                userName: 'Tom',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n            {\r\n                id: '2',\r\n                userName: 'Lily',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n        ]\r\n        //消除警告\r\n        data.map((item,index)=>{\r\n            item.key = index;\r\n        })\r\n        this.setState({\r\n            dataSource:data\r\n        })\r\n        this.request(); //获取动态数据需要在初始化的时候调用一下\r\n    }\r\n\r\n//动态获取mock数据\r\n    request = () => {\r\n    // 封装好后不再使用原生模式获取数据\r\n    // let baseUrl = 'https://www.fastmock.site/mock/a7ca75d7ecc413eb4a0f2ed600ffc80b/mockapi'; \r\n    // axios.get(baseUrl+'/table/list2')\r\n    // .then((res)=>{\r\n    //     // console.log(JSON.stringify(res));\r\n    //     if(res.status === 200 && res.data.code === 0){\r\n    //         // alert(\"000\");\r\n    //         // console.log(res.data.result);\r\n    //         // alert(\"111\");\r\n    //         this.setState({\r\n    //             dataSource2:res.data.result\r\n    //         })\r\n    //     }\r\n    // })\r\n\r\n    //调用封装的axios\r\n    let _this = this;\r\n    axios.ajax({\r\n        url:'/table/list',\r\n        data:{\r\n            params:{\r\n                page:this.params.page\r\n            },\r\n            // isShowLoading:false  //默认就是true\r\n        }\r\n    }).then((res)=>{\r\n        // alert(\"000\");\r\n        if(res.code === 0){\r\n            res.result.list.map((item,index)=>{\r\n                item.key = index;\r\n            })\r\n            this.setState({\r\n                dataSource2:res.result.list,\r\n                selectedRowKeys:[],\r\n                selectedRows:null,\r\n                pagination:Utils.pagination(res,(current)=>{\r\n                    _this.params.page = current;\r\n                    this.request();\r\n                })\r\n            })\r\n        }\r\n    })\r\n    }\r\n    onRowClick = (record,index) => {\r\n        let selectKey = [index]; //定义索引\r\n        Modal.info({\r\n            title:'信息',\r\n            content: `用户名:${record.userName},性别:${record.sex}`\r\n        })\r\n        this.setState({\r\n            selectedRowKeys:selectKey, //选中的哪个索引\r\n            selectdeItem:record //选中的哪一项\r\n        })\r\n    }\r\n    // add = ()=> {\r\n    //     let item = this.state.selectdeItem;\r\n    //     if(item.id){\r\n    //         //做一些事情处理新增、删除item等\r\n    //     }\r\n    // }\r\n    //多选执行删除动作\r\n    handleDelete = (()=>{\r\n        let rows = this.state.selectedRows;\r\n        let ids = [];\r\n        rows.map((item)=>{\r\n            ids.push(item.id)\r\n        })\r\n        Modal.confirm({\r\n            title:'删除提示',\r\n            content:`您确定要删除这些数据吗:${ids.join(',')}`,\r\n            onOk:()=>{\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    })\r\n    render() { \r\n        const columns = [\r\n            {\r\n                title:'id',\r\n                key:'id',\r\n                dataIndex:'id'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                key:'userName',\r\n                dataIndex:'userName'\r\n            },\r\n            {\r\n                title:'性别',\r\n                key:'sex',\r\n                dataIndex:'sex',\r\n                //render 处理当前字段 进行格式化\r\n                render(sex){\r\n                    return sex === 1?'男':'女'\r\n                }\r\n            },\r\n            {\r\n                title:'状态',\r\n                key: 'state',\r\n                dataIndex:\"state\",\r\n                render(state){\r\n                    let config = {\r\n                        '1':'咸鱼一条',\r\n                        '2':'风华浪子',\r\n                        '3':'北大才子',\r\n                        '4':'百度FE',\r\n                        '5':'创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                key:'interest',\r\n                dataIndex:'interest',\r\n                render(abc){\r\n                    let config = {\r\n                        '1': '游泳',\r\n                        '2': '打篮球',\r\n                        '3': '踢足球',\r\n                        '4': '跑步',\r\n                        '5': '爬山',\r\n                        '6': '骑行',\r\n                        '7': '桌球',\r\n                        '8': '麦霸'\r\n                    }\r\n                    return config[abc];\r\n                }\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'地址',\r\n                key: 'address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title:'工作时间',\r\n                key:'time',\r\n                dataIndex:'time'\r\n            }\r\n        ]\r\n        // const {selectedRowKeys} =this.state; //使用解构\r\n        const selectedRowKeys = this.state.selectedRowKeys; //不使用解构\r\n        const rowSelection = {\r\n            type:'radio',\r\n            selectedRowKeys\r\n        }\r\n        const rowCheckSelection = {\r\n            type: 'checkbox',\r\n            selectedRowKeys,\r\n            onChange:(selectedRowKeys,selectedRows)=>{\r\n                // let ids = [];\r\n                // selectedRows.map((item)=>{\r\n                //     ids.push(item.id)\r\n                // })\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedRows\r\n                    // seletctedIds: ids //可以做添加、删除等操作\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title=\"基础表格\">\r\n                    <Table\r\n                        bordered\r\n                        columns = {columns}\r\n                        dataSource = {this.state.dataSource}\r\n                        pagination = {false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"动态数据渲染表格-Mock\" style={{margin:'10px 0'}}>\r\n                    <Table\r\n                        bordered\r\n                        columns = {columns}\r\n                        dataSource = {this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"Mock-单选\" style={{margin:'10px 0'}}>\r\n                    <Table\r\n                        bordered\r\n                        rowSelection = {rowSelection}\r\n                        onRow={(record,index) => {\r\n                            return {\r\n                              onClick: () => {\r\n                                  this.onRowClick(record,index)\r\n                              }, // 点击行\r\n                            //   onDoubleClick: event => {},\r\n                            //   onContextMenu: event => {},\r\n                            //   onMouseEnter: event => {}, // 鼠标移入行\r\n                            //   onMouseLeave: event => {},\r\n                            };\r\n                          }}\r\n                        columns = {columns}\r\n                        dataSource = {this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"Mock-多选\" style={{margin:'10px 0'}}>\r\n                    <div style={{marginBottom:10}}>\r\n                          <Button onClick={this.handleDelete}>删除</Button>\r\n                    </div>\r\n                    <Table\r\n                        bordered\r\n                        rowSelection = {rowCheckSelection}\r\n                        columns = {columns}\r\n                        dataSource = {this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"Mock-表格分页\" style={{ margin: '10px 0' }}>\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default BasicTable;","F:\\danche_2021_3\\src\\pages\\city\\index.js",[],"F:\\danche_2021_3\\src\\utils\\utils.js",["191"],"export default {\r\n    formateDate(time){\r\n        if(!time) return '';\r\n        let date = new Date(time);\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\r\n    },\r\n    pagination(data,callback){\r\n        return  {\r\n            onChange:(current)=>{\r\n                callback(current)\r\n            },\r\n            //接口返回来的\r\n            current:data.result.page,\r\n            pageSize:data.result.page_size,\r\n            total:data.result.total_count,\r\n            showTotal:()=>{\r\n                return `共${data.result.total_count}条`\r\n            },\r\n            showQuickJumper:true\r\n        }\r\n    }\r\n} ","F:\\danche_2021_3\\src\\pages\\table\\highTable.js",["192","193","194","195","196","197","198"],"import { Card, Table, Badge, Button, Modal, message } from 'antd';\r\nimport axios from './../../axios/index'\r\nimport React, { Component } from 'react';\r\n\r\nclass HighTable extends Component {\r\n    state = {\r\n        dataSource:[]\r\n    }\r\n    params = {\r\n        page:1\r\n    }\r\n    componentDidMount(){\r\n        const data = [\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2021-01-01',\r\n                address:'山西省大同市云冈区',\r\n                time:'09:00'\r\n            }\r\n        ]\r\n        // //消除警告\r\n        data.map((item,index)=>{\r\n            item.key = index;\r\n        })\r\n        this.setState({\r\n            dataSource:data\r\n        })\r\n        this.request(); //获取动态数据需要在初始化的时候调用一下\r\n    }\r\n    //动态获取mock数据\r\n    request = () => {\r\n        axios.ajax({\r\n            url:'/table/high/list',\r\n            data:{\r\n                params:{\r\n                    page:this.params.page\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                res.result.list.map((item,index)=>{\r\n                    item.key = index;\r\n                })\r\n                this.setState({\r\n                    dataSource2:res.result.list\r\n                })\r\n            }\r\n        })\r\n    }\r\n    //年龄排序\r\n    handleChange = (pagination,filters,sorter) => {\r\n        console.log(\"::\" + sorter)\r\n        this.setState({\r\n            sortOrder:sorter.order\r\n        })\r\n    }\r\n    //删除操作\r\n    handleDelete = (item) => {\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:'确认',\r\n            content: '您确认删除此条数据吗?',\r\n            onOk:()=> {\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    }\r\n    render() { \r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                key: 'id',\r\n                width:80,\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                key: 'userName',\r\n                width: 80,\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '性别',\r\n                key: 'sex',\r\n                width: 80,\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1 ? '男' : '女'\r\n                }\r\n            },\r\n            {\r\n                title: '状态',\r\n                key: 'state',\r\n                width: 80,\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': '咸鱼一条',\r\n                        '2': '风华浪子',\r\n                        '3': '北大才子',\r\n                        '4': '百度FE',\r\n                        '5': '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                key: 'interest',\r\n                width: 80,\r\n                dataIndex: 'interest',\r\n                render(abc) {\r\n                    let config = {\r\n                        '1': '游泳',\r\n                        '2': '打篮球',\r\n                        '3': '踢足球',\r\n                        '4': '跑步',\r\n                        '5': '爬山',\r\n                        '6': '骑行',\r\n                        '7': '桌球',\r\n                        '8': '麦霸'\r\n                    }\r\n                    return config[abc];\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                key: 'address',\r\n                width: 120,\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                key: 'time',\r\n                width: 80,\r\n                dataIndex: 'time'\r\n            }\r\n        ]\r\n        const columns2 = [\r\n            {\r\n                title: 'id',\r\n                key: 'id',\r\n                width: 80,\r\n                fixed:'left',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                key: 'userName',\r\n                width: 80,\r\n                fixed: 'left',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '性别',\r\n                key: 'sex',\r\n                width: 80,\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1 ? '男' : '女'\r\n                }\r\n            },\r\n            {\r\n                title: '状态',\r\n                key: 'state',\r\n                width: 80,\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': '咸鱼一条',\r\n                        '2': '风华浪子',\r\n                        '3': '北大才子',\r\n                        '4': '百度FE',\r\n                        '5': '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                key: 'interest',\r\n                width: 80,\r\n                dataIndex: 'interest',\r\n                render(abc) {\r\n                    let config = {\r\n                        '1': '游泳',\r\n                        '2': '打篮球',\r\n                        '3': '踢足球',\r\n                        '4': '跑步',\r\n                        '5': '爬山',\r\n                        '6': '骑行',\r\n                        '7': '桌球',\r\n                        '8': '麦霸'\r\n                    }\r\n                    return config[abc];\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                width: 120,\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                key: 'address',\r\n                width: 120,\r\n                fixed: 'right',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                key: 'time',\r\n                width: 80,\r\n                fixed: 'right',\r\n                dataIndex: 'time'\r\n            }\r\n        ]\r\n        const columns3 = [\r\n            {\r\n                title: 'id',\r\n                key: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                key: 'userName',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '性别',\r\n                key: 'sex',\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1 ? '男' : '女'\r\n                }\r\n            },\r\n            {\r\n                title:'年龄',\r\n                key:'age',\r\n                dataIndex:'age',\r\n                sorter:(a,b)=>{\r\n                    return a.age - b.age\r\n                },\r\n                sortOrder:this.state.sortOrder\r\n            },\r\n            {\r\n                title: '状态',\r\n                key: 'state',\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': '咸鱼一条',\r\n                        '2': '风华浪子',\r\n                        '3': '北大才子',\r\n                        '4': '百度FE',\r\n                        '5': '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                key: 'interest',\r\n                dataIndex: 'interest',\r\n                render(abc) {\r\n                    let config = {\r\n                        '1': '游泳',\r\n                        '2': '打篮球',\r\n                        '3': '踢足球',\r\n                        '4': '跑步',\r\n                        '5': '爬山',\r\n                        '6': '骑行',\r\n                        '7': '桌球',\r\n                        '8': '麦霸'\r\n                    }\r\n                    return config[abc];\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                key: 'address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                key: 'time',\r\n                dataIndex: 'time'\r\n            }\r\n        ]\r\n        const columns4 = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1 ? '男' : '女'\r\n                }\r\n            },\r\n            {\r\n                title: '年龄',\r\n                dataIndex: 'age'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': '咸鱼一条',\r\n                        '2': '风华浪子',\r\n                        '3': '北大才子',\r\n                        '4': '百度FE',\r\n                        '5': '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                render(abc) {\r\n                    let config = {\r\n                        '1': <Badge status=\"success\" text=\"成功\"/>,\r\n                        '2': <Badge status=\"error\" text=\"报错\" />,\r\n                        '3': <Badge status=\"default\" text=\"正常\" />,\r\n                        '4': <Badge status=\"processing\" text=\"进行中\" />,\r\n                        '5': <Badge status=\"warning\" text=\"警告\" />,\r\n                        '6': '骑行',\r\n                        '7': '桌球',\r\n                        '8': '麦霸'\r\n                    }\r\n                    return config[abc];\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '操作',\r\n                render:(text,item)=>{\r\n                    return <Button size=\"small\" onClick={(item) => { this.handleDelete(item) }}>删除</Button>\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n               <Card title=\"高级表格\">\r\n                   <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                   />\r\n               </Card>\r\n               <Card title=\"头部固定\">\r\n                   <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                        scroll={{y:240}}\r\n                   />\r\n               </Card>\r\n               <Card title=\"左侧固定\">\r\n                   <Table\r\n                        bordered\r\n                        columns={columns2}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                        scroll={{x:2650}}    \r\n                   />\r\n               </Card>\r\n               <Card title=\"表格排序\">\r\n                   <Table\r\n                        bordered\r\n                        columns={columns3}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                        onChange={this.handleChange}\r\n                        \r\n                   />\r\n               </Card>\r\n               <Card title=\"按钮操作\">\r\n                   <Table\r\n                        bordered\r\n                        columns={columns4}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                        \r\n                   />\r\n               </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HighTable;","F:\\danche_2021_3\\src\\pages\\order\\index.js",["199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"200","replacedBy":"204"},{"ruleId":"202","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":2,"column":9,"nodeType":"208","messageId":"209","endLine":2,"endColumn":15},{"ruleId":"200","replacedBy":"210"},{"ruleId":"202","replacedBy":"211"},{"ruleId":"206","severity":1,"message":"212","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":12},{"ruleId":"200","replacedBy":"213"},{"ruleId":"202","replacedBy":"214"},{"ruleId":"206","severity":1,"message":"215","line":2,"column":16,"nodeType":"208","messageId":"209","endLine":2,"endColumn":20},{"ruleId":"206","severity":1,"message":"216","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":42,"column":25,"nodeType":"219","endLine":42,"endColumn":37},{"ruleId":"220","severity":1,"message":"221","line":28,"column":26,"nodeType":"219","endLine":28,"endColumn":92},{"ruleId":"200","replacedBy":"222"},{"ruleId":"202","replacedBy":"223"},{"ruleId":"217","severity":1,"message":"218","line":78,"column":29,"nodeType":"219","endLine":78,"endColumn":67},{"ruleId":"220","severity":1,"message":"221","line":191,"column":57,"nodeType":"219","endLine":191,"endColumn":88},{"ruleId":"217","severity":1,"message":"218","line":199,"column":52,"nodeType":"219","endLine":199,"endColumn":64},{"ruleId":"224","severity":1,"message":"225","line":48,"column":30,"nodeType":"226","messageId":"227","endLine":48,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":87,"column":45,"nodeType":"226","messageId":"227","endLine":87,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":123,"column":24,"nodeType":"226","messageId":"227","endLine":123,"endColumn":26},{"ruleId":"228","severity":1,"message":"229","line":1,"column":1,"nodeType":"230","endLine":22,"endColumn":2},{"ruleId":"224","severity":1,"message":"225","line":26,"column":30,"nodeType":"226","messageId":"227","endLine":26,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":45,"column":49,"nodeType":"226","messageId":"227","endLine":45,"endColumn":51},{"ruleId":"206","severity":1,"message":"231","line":63,"column":13,"nodeType":"208","messageId":"209","endLine":63,"endColumn":15},{"ruleId":"232","severity":1,"message":"233","line":93,"column":32,"nodeType":"234","messageId":"235","endLine":93,"endColumn":34},{"ruleId":"232","severity":1,"message":"233","line":171,"column":32,"nodeType":"234","messageId":"235","endLine":171,"endColumn":34},{"ruleId":"232","severity":1,"message":"233","line":327,"column":32,"nodeType":"234","messageId":"235","endLine":327,"endColumn":34},{"ruleId":"232","severity":1,"message":"233","line":401,"column":32,"nodeType":"234","messageId":"235","endLine":401,"endColumn":34},{"ruleId":"206","severity":1,"message":"236","line":72,"column":13,"nodeType":"208","messageId":"209","endLine":72,"endColumn":17},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],["237"],["238"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["237"],["238"],"'Home' is defined but never used.",["237"],["238"],"'Icon' is defined but never used.","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["237"],["238"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'id' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'item' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]